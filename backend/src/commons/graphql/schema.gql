# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BookProduct {
  id: String!
  author: String!
  publisher: String!
  publishedDate: DateTime!
  isbn: String!
  pages: Int!
  genre: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Review {
  id: String!
  title: String!
  content: String!
  rating: Int!
  product: Product!
  user: User!
}

type ProductTag {
  id: String!
  name: String!
  products: [Product!]!
}

type ProductImage {
  id: String!
  imageUrl: String!
  product: Product!
}

type Order {
  id: String!
  orderTotalPrice: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  paymentStatus: String!
  user: User!
  orderItems: [OrderItem!]!
}

type OrderItem {
  id: String!
  order: Order!
  product: Product!
  quantity: Float!
  itemTotalPrice: Float!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Int!
  stock: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  isBook: Boolean!
  bookProduct: BookProduct
  reviews: [Review!]
  productTags: [ProductTag!]
  orderItems: [OrderItem!]
  productImages: [ProductImage!]
}

type CartItem {
  id: String!
  cart: Cart!
  product: Product!
  quantity: Int!
}

type Cart {
  id: String!
  user: User!
  cartItems: [CartItem!]!
}

type User {
  id: String!
  name: String!
  email: String!
  age: Int!
  point: Int!
  isSeller: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  cart: Cart
  orders: [Order!]
  reviews: [Review!]!
}

type PaymentTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type Query {
  fetchUser: User!
  fetchCart: Cart!
  fetchProduct(productId: String!): Product!
  fetchProducts(page: Int = 1, limit: Int = 10): [Product!]!
  fetchProductTagById(productTagId: String!): ProductTag!
  fetchProductTags: [ProductTag!]!
  fetchProductsByTag(productTagId: String!): [Product!]!
  fetchOrder(orderId: String!): Order!
  fetchOrders: [Order!]!
  fetchPaymentTransaction(impUid: String!): PaymentTransaction!
  fetchPaymentTransactions: [PaymentTransaction!]!
  fetchReviewsByReviewId(reviewId: String!): Review!
  fetchReviewsByUserId: [Review!]!
  fetchReviewsByProductId(productId: String!): [Review!]!
}

type Mutation {
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser: Boolean!
  createCart: Cart!
  addProductToCart(addProductToCartInput: AddProductToCartInput!): Cart!
  updateCartItem(updateCartInput: UpdateCartInput!): Cart!
  deleteCart: Boolean!
  deleteCartItem(productId: String!): Boolean!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  addProductTag(productId: String!, productTagId: String!): Product!
  createProductTag(createProductTagInput: CreateProductTagInput!): ProductTag!
  updateProductTag(productTagId: String!, updateProductTagInput: UpdateProductTagInput!): ProductTag!
  deleteProductTag(productTagId: String!): Boolean!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  createOrderFromCart: Order!
  deleteOrder(orderId: String!): Boolean!
  createPaymentTransaction(impUid: String!, amount: Int!): PaymentTransaction!
  cancelPaymentTransaction(impUid: String!): PaymentTransaction!
  createReview(productId: String!, createReviewInput: CreateReviewInput!): Review!
  deleteReview(reviewId: String!): Boolean!
  updateReview(reviewId: String!, updateReviewInput: UpdateReviewInput!): Review!
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
  age: Int!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  age: Int
  point: Int
}

input AddProductToCartInput {
  productId: String!
  quantity: Int! = 1
}

input UpdateCartInput {
  productId: String!
  quantity: Int!
}

input CreateProductInput {
  name: String!
  description: String!
  price: Int!
  isBook: Boolean!
  bookProductInput: BookProductInput
}

input BookProductInput {
  author: String!
  publisher: String!
  publishedDate: DateTime!
  isbn: String!
  pages: Int!
  genre: String!
}

input UpdateProductInput {
  name: String
  description: String
  price: Int
  isBook: Boolean
  bookProductInput: BookProductInput
  stock: Int
}

input CreateProductTagInput {
  name: String!
}

input UpdateProductTagInput {
  name: String!
}

input CreateOrderInput {
  orderItems: [OrderItemInput!]!
}

input OrderItemInput {
  productId: String!
  quantity: Int!
}

input CreateReviewInput {
  title: String!
  content: String!
  rating: Int!
}

input UpdateReviewInput {
  title: String
  content: String
  rating: Int
}